System.registerModule("../../../../../../node_modules/foxy/node_modules/resp-modifier/lib/utils.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../node_modules/foxy/node_modules/resp-modifier/lib/utils.js";
  var minimatch = require("minimatch");
  var utils = exports;
  utils.overwriteBody = function overwriteBody(rules, body, res) {
    rules.forEach(function(rule, i) {
      if (rule.replace) {
        rule.fn = rule.replace;
      }
      if (typeof rule.match === "string") {
        return body = body.replace(rule.match, handleMatch);
      }
      body = body.replace(rule.match, handleMatch);
      function handleMatch() {
        var inarray = res.rulesWritten.indexOf(i) > -1;
        if (rule.once && inarray) {
          return arguments[0];
        }
        var args = Array.prototype.slice.call(arguments);
        if (!inarray) {
          res.rulesWritten.push(i);
        }
        if (typeof rule.fn === 'function') {
          return rule.fn.apply(this, args);
        } else {
          return rule.fn;
        }
      }
    });
    return body;
  };
  utils.defaultIgnoreTypes = ["js", "json", "css", "png", "jpg", "jpeg", "gif", "ico", "tif", "tiff", "bmp", "webp", "psd", "svg", "woff", "ttf", "otf", "eot", "eps", "ps", "ai", "mp3", "wav", "aac", "m4a", "m3u", "mid", "wma", "mpg", "mpeg", "mp4", "m4v", "webm", "swf", "flv", "avi", "mov", "wmv", "pdf", "doc", "docx", "xls", "xlsx", "pps", "ppt", "pptx", "odt", "ods", "odp", "pages", "key", "rtf", "txt", "csv", "zip", "rar", "tar", "gz", "xml", "app", "exe", "jar", "dmg", "pkg", "iso"].map(function(ext) {
    return "\\." + ext + "(\\?.*)?$";
  });
  utils.isWhitelisted = function isWhitelisted(url, whitelist) {
    if (whitelist.indexOf(url) > -1) {
      return true;
    }
    return whitelist.some(function(pattern) {
      return minimatch(url, pattern);
    });
  };
  utils.isWhiteListedForSingle = function isWhiteListedForSingle(url, rules) {
    return rules.filter(function(item) {
      return item.paths && utils.isWhitelisted(url, utils.toArray(item.paths));
    });
  };
  utils.inBlackList = function inBlackList(url, opts) {
    if (!url || opts.blacklist.indexOf(url) > -1) {
      return true;
    }
    if (url.length === 1 && url === "/") {
      return false;
    }
    if (opts.ignore.some(function(pattern) {
      return new RegExp(pattern).test(url);
    })) {
      return true;
    }
    if (opts.blacklist.some(function(pattern) {
      return minimatch(url, pattern);
    })) {
      return true;
    }
    return false;
  };
  utils.hasAcceptHeaders = function hasAcceptHeaders(req) {
    var acceptHeader = req.headers["accept"];
    if (!acceptHeader) {
      return false;
    }
    return (~acceptHeader.indexOf("html"));
  };
  utils.snip = function snip(body) {
    if (!body) {
      return false;
    }
  };
  utils.exists = function exists(body, regex) {
    if (!body) {
      return false;
    }
    return regex.test(body);
  };
  utils.toArray = function toArray(item) {
    if (!item) {
      return item;
    }
    if (!Array.isArray(item)) {
      return [item];
    }
    return item;
  };
  utils.isHtml = function isHtml(str) {
    if (!str) {
      return false;
    }
    return /^(\uFEFF|\uFFFE)?\s*<[^>]+>/i.test(str);
  };
  return {};
});
System.get("../../../../../../node_modules/foxy/node_modules/resp-modifier/lib/utils.js" + '');
