System.registerModule("../../../../../node_modules/weinre/web/client/Script.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/Script.js";
  WebInspector.Script = function(sourceID, sourceURL, source, lineOffset, columnOffset, length, errorLine, errorMessage, worldType) {
    this.sourceID = sourceID;
    this.sourceURL = sourceURL;
    this._source = source;
    this.lineOffset = lineOffset;
    this.columnOffset = columnOffset;
    this.length = length;
    this.errorLine = errorLine;
    this.errorMessage = errorMessage;
    this.worldType = worldType;
    if (!sourceURL) {
      var pattern = /^\s*\/\/[ \t]*@[ \t]*sourceURL[ \t]*=[ \t]*(\S+).*$/m;
      var match = pattern.exec(source);
      if (match)
        this.sourceURL = match[1];
    }
  };
  WebInspector.Script.WorldType = {
    MAIN_WORLD: 0,
    EXTENSIONS_WORLD: 1
  };
  WebInspector.Script.WorldType = {
    MAIN_WORLD: 0,
    EXTENSIONS_WORLD: 1
  };
  WebInspector.Script.prototype = {
    get startingLine() {
      return this.lineOffset + 1;
    },
    get linesCount() {
      if (!this.source)
        return 0;
      if (!this._lineEndings)
        this._lineEndings = this._source.findAll("\n");
      return this._lineEndings.length + 1;
    },
    sourceLine: function(lineNumber, callback) {
      function extractSourceLine() {
        lineNumber -= this.lineOffset;
        callback(this._source.substring(this._lineEndings[lineNumber - 1], this._lineEndings[lineNumber]));
      }
      if (this._lineEndings) {
        extractSourceLine.call(this);
        return;
      }
      function didRequestSource() {
        this._lineEndings = this._source.findAll("\n");
        extractSourceLine.call(this);
      }
      this.requestSource(didRequestSource.bind(this));
    },
    get source() {
      if (!this._source && this.resource)
        this._source = this.resource.content;
      return this._source;
    },
    set source(source) {
      this._source = source;
      delete this._lineEndings;
    },
    requestSource: function(callback) {
      if (this._source) {
        callback(this._source);
        return;
      }
      function didGetScriptSource(source) {
        this._source = source;
        callback(this._source);
      }
      InspectorBackend.getScriptSource(this.sourceID, didGetScriptSource.bind(this));
    }
  };
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/Script.js" + '');
