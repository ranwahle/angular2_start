System.registerModule("../../../../../../node_modules/weinre/web/client/weinre/hacks.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../node_modules/weinre/web/client/weinre/hacks.js";
  ;
  (function() {
    var version = navigator.appVersion.match(/^.*Chrome\/(\d+)\..*$/);
    if (!version)
      return;
    version = parseInt(version[1]);
    if (version <= 26)
      return;
    setTimeout(fixToolbarItem, 1000);
    function fixToolbarItem() {
      var toolbarItems = document.querySelectorAll(".toolbar-item.toggleable");
      for (var i = 0; i < toolbarItems.length; i++) {
        var style = toolbarItems[i].style;
        if (style.display != "none") {
          toolbarItems[i].style.display = "inline-block";
        }
      }
    }
  })();
  (function() {
    var hasProto = "__proto__" in Object.prototype;
    if (!hasProto) {
      Object.defineProperty(Object.prototype, '__proto__', {
        set: function(value) {
          var tmpFunc = new Function();
          tmpFunc.prototype = Object.create(value);
          function copyProperties(a, b) {
            var d;
            for (var i in b) {
              d = Object.getOwnPropertyDescriptor(b, i);
              if (d && (d.get || d.set)) {
                Object.defineProperty(a, i, d);
              } else {
                a[i] = b[i];
              }
            }
            return a;
          }
          function findProtoOwner(root, proto, depth) {
            if (depth > 1)
              return;
            var props = Object.getOwnPropertyNames(root),
                prop,
                d;
            for (var i = props.length; i--; ) {
              prop = props[i];
              d = Object.getOwnPropertyDescriptor(root, prop);
              if (d && (d.get || d.set))
                continue;
              if (typeof(root[prop]) === 'function' && root[prop].prototype === proto) {
                return root[prop];
              }
              if (root[prop] && root[prop].prototype instanceof WebInspector.Object) {
                var owner = findProtoOwner(root[prop], proto, depth + 1);
                if (owner)
                  return owner;
              }
            }
          }
          copyProperties(tmpFunc.prototype, this);
          var owner = findProtoOwner(window.WebInspector, this, 0);
          if (owner) {
            owner.prototype = new tmpFunc();
            owner.prototype.proto = value;
          }
        },
        get: function() {
          return this.proto;
        }
      });
    }
  })();
  if (!HTMLElement.prototype.scrollIntoViewIfNeeded) {
    HTMLElement.prototype.scrollIntoViewIfNeeded = function(alignWithTop) {
      return this.scrollIntoView(alignWithTop);
    };
  }
  if (!Selection.prototype.setBaseAndExtent) {
    Selection.prototype.setBaseAndExtent = Selection.prototype.selectAllChildren;
  }
  return {};
});
System.get("../../../../../../node_modules/weinre/web/client/weinre/hacks.js" + '');
