System.registerModule("../../../../../node_modules/weinre/web/client/KeyboardShortcut.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/KeyboardShortcut.js";
  WebInspector.KeyboardShortcut = function() {};
  WebInspector.KeyboardShortcut.Modifiers = {
    None: 0,
    Shift: 1,
    Ctrl: 2,
    Alt: 4,
    Meta: 8,
    get CtrlOrMeta() {
      return WebInspector.isMac() ? this.Meta : this.Ctrl;
    }
  };
  WebInspector.KeyboardShortcut.Keys = {
    Backspace: {
      code: 8,
      name: "\u21a4"
    },
    Tab: {
      code: 9,
      name: {
        mac: "\u21e5",
        other: "<Tab>"
      }
    },
    Enter: {
      code: 13,
      name: {
        mac: "\u21a9",
        other: "<Enter>"
      }
    },
    Esc: {
      code: 27,
      name: {
        mac: "\u238b",
        other: "<Esc>"
      }
    },
    Space: {
      code: 32,
      name: "<Space>"
    },
    PageUp: {
      code: 33,
      name: {
        mac: "\u21de",
        other: "<PageUp>"
      }
    },
    PageDown: {
      code: 34,
      name: {
        mac: "\u21df",
        other: "<PageDown>"
      }
    },
    End: {
      code: 35,
      name: {
        mac: "\u2197",
        other: "<End>"
      }
    },
    Home: {
      code: 36,
      name: {
        mac: "\u2196",
        other: "<Home>"
      }
    },
    Left: {
      code: 37,
      name: "\u2190"
    },
    Up: {
      code: 38,
      name: "\u2191"
    },
    Right: {
      code: 39,
      name: "\u2192"
    },
    Down: {
      code: 40,
      name: "\u2193"
    },
    Delete: {
      code: 46,
      name: "<Del>"
    },
    Zero: {
      code: 48,
      name: "0"
    },
    F1: {
      code: 112,
      name: "F1"
    },
    F2: {
      code: 113,
      name: "F2"
    },
    F3: {
      code: 114,
      name: "F3"
    },
    F4: {
      code: 115,
      name: "F4"
    },
    F5: {
      code: 116,
      name: "F5"
    },
    F6: {
      code: 117,
      name: "F6"
    },
    F7: {
      code: 118,
      name: "F7"
    },
    F8: {
      code: 119,
      name: "F8"
    },
    F9: {
      code: 120,
      name: "F9"
    },
    F10: {
      code: 121,
      name: "F10"
    },
    F11: {
      code: 122,
      name: "F11"
    },
    F12: {
      code: 123,
      name: "F12"
    },
    Semicolon: {
      code: 186,
      name: ";"
    },
    Plus: {
      code: 187,
      name: "+"
    },
    Comma: {
      code: 188,
      name: ","
    },
    Minus: {
      code: 189,
      name: "-"
    },
    Period: {
      code: 190,
      name: "."
    },
    Slash: {
      code: 191,
      name: "/"
    },
    Apostrophe: {
      code: 192,
      name: "`"
    },
    SingleQuote: {
      code: 222,
      name: "\'"
    }
  };
  WebInspector.KeyboardShortcut.makeKey = function(keyCode, optModifiers) {
    if (typeof keyCode === "string")
      keyCode = keyCode.charCodeAt(0) - 32;
    var modifiers = WebInspector.KeyboardShortcut.Modifiers.None;
    for (var i = 1; i < arguments.length; i++)
      modifiers |= arguments[i];
    return WebInspector.KeyboardShortcut._makeKeyFromCodeAndModifiers(keyCode, modifiers);
  };
  WebInspector.KeyboardShortcut.makeKeyFromEvent = function(keyboardEvent) {
    var modifiers = WebInspector.KeyboardShortcut.Modifiers.None;
    if (keyboardEvent.shiftKey)
      modifiers |= WebInspector.KeyboardShortcut.Modifiers.Shift;
    if (keyboardEvent.ctrlKey)
      modifiers |= WebInspector.KeyboardShortcut.Modifiers.Ctrl;
    if (keyboardEvent.altKey)
      modifiers |= WebInspector.KeyboardShortcut.Modifiers.Alt;
    if (keyboardEvent.metaKey)
      modifiers |= WebInspector.KeyboardShortcut.Modifiers.Meta;
    return WebInspector.KeyboardShortcut._makeKeyFromCodeAndModifiers(keyboardEvent.keyCode, modifiers);
  };
  WebInspector.KeyboardShortcut.makeDescriptor = function(key, optModifiers) {
    var modifiers = 0;
    for (var i = 1; i < arguments.length; i++)
      modifiers |= arguments[i];
    return {
      key: WebInspector.KeyboardShortcut.makeKey(typeof key === "string" ? key : key.code, modifiers),
      name: WebInspector.KeyboardShortcut.shortcutToString(key, modifiers)
    };
  };
  WebInspector.KeyboardShortcut.shortcutToString = function(key, modifiers) {
    return WebInspector.KeyboardShortcut._modifiersToString(modifiers) + WebInspector.KeyboardShortcut._keyName(key);
  };
  WebInspector.KeyboardShortcut._keyName = function(key) {
    if (typeof key === "string")
      return key.toUpperCase();
    if (typeof key.name === "string")
      return key.name;
    return key.name[WebInspector.platform] || key.name.other;
  };
  WebInspector.KeyboardShortcut._makeKeyFromCodeAndModifiers = function(keyCode, modifiers) {
    return (keyCode & 255) | (modifiers << 8);
  };
  WebInspector.KeyboardShortcut._modifiersToString = function(modifiers) {
    var cmdKey = "\u2318";
    var optKey = "\u2325";
    var shiftKey = "\u21e7";
    var ctrlKey = "\u2303";
    var isMac = WebInspector.isMac();
    var res = "";
    if (modifiers & WebInspector.KeyboardShortcut.Modifiers.Ctrl)
      res += isMac ? ctrlKey : "<Ctrl> + ";
    if (modifiers & WebInspector.KeyboardShortcut.Modifiers.Alt)
      res += isMac ? optKey : "<Alt> + ";
    if (modifiers & WebInspector.KeyboardShortcut.Modifiers.Shift)
      res += isMac ? shiftKey : "<Shift> + ";
    if (modifiers & WebInspector.KeyboardShortcut.Modifiers.Meta)
      res += isMac ? cmdKey : "<Win> + ";
    return res;
  };
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/KeyboardShortcut.js" + '');
