System.registerModule("../../../../../node_modules/weinre/web/client/PleaseWaitMessage.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/PleaseWaitMessage.js";
  WebInspector.PleaseWaitMessage = function() {
    this.element = document.createElement("div");
    this.element.className = "please-wait-msg";
    this.element.textContent = WebInspector.UIString("Please wait\u2026");
    this.cancelButton = document.createElement("button");
    this.cancelButton.textContent = WebInspector.UIString("Cancel");
    this.cancelButton.addEventListener("click", this._cancelClicked.bind(this), false);
  };
  WebInspector.PleaseWaitMessage.prototype = {
    _cancelClicked: function() {
      if (this._cancelCallback) {
        var cancelCallback = this._cancelCallback;
        delete this._cancelCallback;
        cancelCallback();
      }
    },
    hide: function() {
      var instance = WebInspector.PleaseWaitMessage.prototype.instance;
      var message = instance.element;
      if (message.parentNode)
        message.parentNode.removeChild(message);
    },
    get instance() {
      if (!"_instance" in WebInspector.PleaseWaitMessage.prototype)
        WebInspector.PleaseWaitMessage.prototype._instance = new WebInspector.PleaseWaitMessage();
      return WebInspector.PleaseWaitMessage.prototype._instance;
    },
    show: function(element, cancelCallback) {
      var instance = WebInspector.PleaseWaitMessage.prototype.instance;
      var message = instance.element;
      if (message.parentNode === element)
        return;
      else if (message.parentNode)
        message.parentNode.removeChild(message);
      if (message.childNodes.length > 1)
        message.removeChild(instance.cancelButton);
      if (cancelCallback) {
        message.appendChild(instance.cancelButton);
        instance._cancelCallback = cancelCallback;
      }
      element.appendChild(message);
    },
    startAction: function(element, actionCallback, cancelCallback) {
      var instance = WebInspector.PleaseWaitMessage.prototype.instance;
      var message = instance.element;
      if (message.parentNode === element) {
        actionCallback();
        return;
      }
      function doAction() {
        try {
          actionCallback();
        } finally {
          if (message.parentNode)
            message.parentNode.removeChild(message);
        }
      }
      WebInspector.PleaseWaitMessage.prototype.show(element, cancelCallback);
      setTimeout(doAction, 0);
    }
  };
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/PleaseWaitMessage.js" + '');
