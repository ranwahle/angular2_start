System.registerModule("../../../../../node_modules/weinre/web/client/ResourceView.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/ResourceView.js";
  WebInspector.ResourceView = function(resource) {
    WebInspector.View.call(this);
    this.element.addStyleClass("resource-view");
    this.resource = resource;
  };
  WebInspector.ResourceView.prototype = {hasContent: function() {
      return false;
    }};
  WebInspector.ResourceView.prototype.__proto__ = WebInspector.View.prototype;
  WebInspector.ResourceView.createResourceView = function(resource) {
    switch (resource.category) {
      case WebInspector.resourceCategories.documents:
      case WebInspector.resourceCategories.stylesheets:
      case WebInspector.resourceCategories.scripts:
      case WebInspector.resourceCategories.xhr:
        var contentProvider = new WebInspector.SourceFrameContentProviderForResource(resource);
        var isScript = resource.type === WebInspector.Resource.Type.Script;
        var view = new WebInspector.SourceFrame(contentProvider, resource.url, isScript);
        view.resource = resource;
        return view;
      case WebInspector.resourceCategories.images:
        return new WebInspector.ImageView(resource);
      case WebInspector.resourceCategories.fonts:
        return new WebInspector.FontView(resource);
      default:
        return new WebInspector.ResourceView(resource);
    }
  };
  WebInspector.ResourceView.resourceViewTypeMatchesResource = function(resource) {
    var resourceView = resource._resourcesView;
    switch (resource.category) {
      case WebInspector.resourceCategories.documents:
      case WebInspector.resourceCategories.stylesheets:
      case WebInspector.resourceCategories.scripts:
      case WebInspector.resourceCategories.xhr:
        return resourceView.__proto__ === WebInspector.SourceFrame.prototype;
      case WebInspector.resourceCategories.images:
        return resourceView.__proto__ === WebInspector.ImageView.prototype;
      case WebInspector.resourceCategories.fonts:
        return resourceView.__proto__ === WebInspector.FontView.prototype;
      default:
        return resourceView.__proto__ === WebInspector.ResourceView.prototype;
    }
  };
  WebInspector.ResourceView.resourceViewForResource = function(resource) {
    if (!resource)
      return null;
    if (!resource._resourcesView)
      resource._resourcesView = WebInspector.ResourceView.createResourceView(resource);
    return resource._resourcesView;
  };
  WebInspector.ResourceView.recreateResourceView = function(resource) {
    var newView = WebInspector.ResourceView.createResourceView(resource);
    var oldView = resource._resourcesView;
    var oldViewParentNode = oldView.visible ? oldView.element.parentNode : null;
    var scrollTop = oldView.scrollTop;
    resource._resourcesView.detach();
    delete resource._resourcesView;
    resource._resourcesView = newView;
    if (oldViewParentNode)
      newView.show(oldViewParentNode);
    if (scrollTop)
      newView.scrollTop = scrollTop;
    return newView;
  };
  WebInspector.ResourceView.existingResourceViewForResource = function(resource) {
    if (!resource)
      return null;
    return resource._resourcesView;
  };
  WebInspector.SourceFrameContentProviderForResource = function(resource) {
    WebInspector.SourceFrameContentProvider.call(this);
    this._resource = resource;
  };
  WebInspector.SourceFrameContentProviderForResource.DefaultMIMETypeForResourceType = {
    0: "text/html",
    1: "text/css",
    4: "text/javascript"
  };
  WebInspector.SourceFrameContentProviderForResource.prototype = {requestContent: function(callback) {
      function contentLoaded(text) {
        var mimeType = WebInspector.SourceFrameContentProviderForResource.DefaultMIMETypeForResourceType[this._resource.type] || this._resource.mimeType;
        if (this._resource.type !== WebInspector.Resource.Type.Script) {
          text = text.replace(/\r\n/g, "\n");
        }
        var sourceMapping = new WebInspector.IdenticalSourceMapping();
        var scripts = WebInspector.debuggerModel.scriptsForURL(this._resource.url);
        var scriptRanges = WebInspector.ScriptFormatter.findScriptRanges(text.lineEndings(), scripts);
        callback(mimeType, new WebInspector.SourceFrameContent(text, sourceMapping, scriptRanges));
      }
      this._resource.requestContent(contentLoaded.bind(this));
    }};
  WebInspector.SourceFrameContentProviderForResource.prototype.__proto__ = WebInspector.SourceFrameContentProvider.prototype;
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/ResourceView.js" + '');
