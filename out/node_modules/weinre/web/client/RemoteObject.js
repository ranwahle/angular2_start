System.registerModule("../../../../../node_modules/weinre/web/client/RemoteObject.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/RemoteObject.js";
  WebInspector.RemoteObject = function(objectId, type, description, hasChildren) {
    this._objectId = objectId;
    this._type = type;
    this._description = description;
    this._hasChildren = hasChildren;
  };
  WebInspector.RemoteObject.fromPrimitiveValue = function(value) {
    return new WebInspector.RemoteObject(null, typeof value, value);
  };
  WebInspector.RemoteObject.fromLocalObject = function(value) {
    return new WebInspector.LocalJSONObject(value);
  };
  WebInspector.RemoteObject.resolveNode = function(node, callback) {
    function mycallback(object) {
      callback(object ? WebInspector.RemoteObject.fromPayload(object) : null);
    }
    InspectorBackend.resolveNode(node.id, mycallback);
  };
  WebInspector.RemoteObject.fromPayload = function(payload) {
    if (typeof payload === "object")
      return new WebInspector.RemoteObject(payload.objectId, payload.type, payload.description, payload.hasChildren);
    return payload;
  };
  WebInspector.RemoteObject.type = function(remoteObject) {
    if (remoteObject === null)
      return "null";
    var type = typeof remoteObject;
    if (type !== "object" && type !== "function")
      return type;
    return remoteObject.type;
  };
  WebInspector.RemoteObject.prototype = {
    get objectId() {
      return this._objectId;
    },
    get type() {
      return this._type;
    },
    get description() {
      return this._description;
    },
    get hasChildren() {
      return this._hasChildren;
    },
    isError: function() {
      return this._type === "error";
    },
    getOwnProperties: function(abbreviate, callback) {
      this.getProperties(false, abbreviate, callback);
    },
    getProperties: function(ignoreHasOwnProperty, abbreviate, callback) {
      if (!this._objectId) {
        callback([]);
        return;
      }
      function remoteObjectBinder(properties) {
        for (var i = 0; properties && i < properties.length; ++i)
          properties[i].value = WebInspector.RemoteObject.fromPayload(properties[i].value);
        callback(properties);
      }
      InspectorBackend.getProperties(this._objectId, !!ignoreHasOwnProperty, abbreviate, remoteObjectBinder);
    },
    setPropertyValue: function(name, value, callback) {
      if (!this._objectId) {
        callback(false);
        return;
      }
      InspectorBackend.setPropertyValue(this._objectId, name, value, callback);
    },
    pushNodeToFrontend: function(callback) {
      InspectorBackend.pushNodeToFrontend(this._objectId, callback);
    }
  };
  WebInspector.RemoteObjectProperty = function(name, value) {
    this.name = name;
    this.value = value;
  };
  WebInspector.LocalJSONObject = function(value) {
    this._value = value;
  };
  WebInspector.LocalJSONObject.prototype = {
    get description() {
      var type = this.type;
      switch (type) {
        case "array":
          return "[" + this._value.length + "]";
        case "object":
          return this.hasChildren ? "{...}" : "{ }";
        default:
          return JSON.stringify(this._value);
      }
    },
    get type() {
      if (this._value === null)
        return "null";
      if (this._value instanceof Array)
        return "array";
      return typeof this._value;
    },
    get hasChildren() {
      return typeof this._value === "object" && this._value !== null && Object.keys(this._value).length;
    },
    getOwnProperties: function(abbreviate, callback) {
      return this.getProperties(false, abbreviate, callback);
    },
    getProperties: function(ignoreHasOwnProperty, abbreviate, callback) {
      function buildProperty(propName) {
        return new WebInspector.RemoteObjectProperty(propName, new WebInspector.LocalJSONObject(this._value[propName]));
      }
      callback(Object.keys(this._value).map(buildProperty.bind(this)));
    },
    isError: function() {
      return false;
    }
  };
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/RemoteObject.js" + '');
