System.registerModule("../../../../../node_modules/weinre/web/client/AuditFormatters.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/weinre/web/client/AuditFormatters.js";
  WebInspector.applyFormatters = function(value) {
    var formatter;
    var type = typeof value;
    var args;
    switch (type) {
      case "string":
      case "boolean":
      case "number":
        formatter = WebInspector.AuditFormatters.text;
        args = [value.toString()];
        break;
      case "object":
        if (value instanceof Array) {
          formatter = WebInspector.AuditFormatters.concat;
          args = value;
        } else if (value.type && value.arguments) {
          formatter = WebInspector.AuditFormatters[value.type];
          args = value.arguments;
        }
    }
    if (!formatter)
      throw "Invalid value or formatter: " + type + JSON.stringify(value);
    return formatter.apply(null, args);
  };
  WebInspector.AuditFormatters = {
    text: function(text) {
      return document.createTextNode(text);
    },
    snippet: function(snippetText) {
      var div = document.createElement("div");
      div.innerText = snippetText;
      div.className = "source-code";
      return div;
    },
    concat: function() {
      var parent = document.createElement("span");
      for (var arg = 0; arg < arguments.length; ++arg)
        parent.appendChild(WebInspector.applyFormatters(arguments[arg]));
      return parent;
    },
    url: function(url, displayText, allowExternalNavigation) {
      var a = document.createElement("a");
      a.href = url;
      a.title = url;
      a.textContent = displayText || url;
      if (allowExternalNavigation)
        a.target = "_blank";
      return a;
    }
  };
  return {};
});
System.get("../../../../../node_modules/weinre/web/client/AuditFormatters.js" + '');
