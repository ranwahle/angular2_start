System.registerModule("../../../../../node_modules/rx/src/core/experimentalheader.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/rx/src/core/experimentalheader.js";
  var Observable = Rx.Observable,
      observableProto = Observable.prototype,
      AnonymousObservable = Rx.AnonymousObservable,
      observableConcat = Observable.concat,
      observableDefer = Observable.defer,
      observableEmpty = Observable.empty,
      disposableEmpty = Rx.Disposable.empty,
      CompositeDisposable = Rx.CompositeDisposable,
      SerialDisposable = Rx.SerialDisposable,
      SingleAssignmentDisposable = Rx.SingleAssignmentDisposable,
      Enumerator = Rx.internals.Enumerator,
      Enumerable = Rx.internals.Enumerable,
      enumerableOf = Enumerable.of,
      immediateScheduler = Rx.Scheduler.immediate,
      currentThreadScheduler = Rx.Scheduler.currentThread,
      slice = Array.prototype.slice,
      AsyncSubject = Rx.AsyncSubject,
      Observer = Rx.Observer,
      inherits = Rx.internals.inherits,
      bindCallback = Rx.internals.bindCallback,
      addProperties = Rx.internals.addProperties,
      helpers = Rx.helpers,
      noop = helpers.noop,
      isPromise = helpers.isPromise,
      isScheduler = helpers.isScheduler,
      observableFromPromise = Observable.fromPromise;
  function argsOrArray(args, idx) {
    return args.length === 1 && Array.isArray(args[idx]) ? args[idx] : slice.call(args);
  }
  return {};
});
System.get("../../../../../node_modules/rx/src/core/experimentalheader.js" + '');
