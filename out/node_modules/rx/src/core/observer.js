System.registerModule("../../../../../node_modules/rx/src/core/observer.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/rx/src/core/observer.js";
  var Observer = Rx.Observer = function() {};
  Observer.prototype.toNotifier = function() {
    var observer = this;
    return function(n) {
      return n.accept(observer);
    };
  };
  Observer.prototype.asObserver = function() {
    return new AnonymousObserver(this.onNext.bind(this), this.onError.bind(this), this.onCompleted.bind(this));
  };
  Observer.prototype.checked = function() {
    return new CheckedObserver(this);
  };
  var observerCreate = Observer.create = function(onNext, onError, onCompleted) {
    onNext || (onNext = noop);
    onError || (onError = defaultError);
    onCompleted || (onCompleted = noop);
    return new AnonymousObserver(onNext, onError, onCompleted);
  };
  Observer.fromNotifier = function(handler, thisArg) {
    return new AnonymousObserver(function(x) {
      return handler.call(thisArg, notificationCreateOnNext(x));
    }, function(e) {
      return handler.call(thisArg, notificationCreateOnError(e));
    }, function() {
      return handler.call(thisArg, notificationCreateOnCompleted());
    });
  };
  Observer.prototype.notifyOn = function(scheduler) {
    return new ObserveOnObserver(scheduler, this);
  };
  return {};
});
System.get("../../../../../node_modules/rx/src/core/observer.js" + '');
