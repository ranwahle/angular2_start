System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/expand.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/expand.js";
  observableProto.expand = function(selector, scheduler) {
    isScheduler(scheduler) || (scheduler = immediateScheduler);
    var source = this;
    return new AnonymousObservable(function(observer) {
      var q = [],
          m = new SerialDisposable(),
          d = new CompositeDisposable(m),
          activeCount = 0,
          isAcquired = false;
      var ensureActive = function() {
        var isOwner = false;
        if (q.length > 0) {
          isOwner = !isAcquired;
          isAcquired = true;
        }
        if (isOwner) {
          m.setDisposable(scheduler.scheduleRecursive(function(self) {
            var work;
            if (q.length > 0) {
              work = q.shift();
            } else {
              isAcquired = false;
              return;
            }
            var m1 = new SingleAssignmentDisposable();
            d.add(m1);
            m1.setDisposable(work.subscribe(function(x) {
              observer.onNext(x);
              var result = null;
              try {
                result = selector(x);
              } catch (e) {
                observer.onError(e);
              }
              q.push(result);
              activeCount++;
              ensureActive();
            }, observer.onError.bind(observer), function() {
              d.remove(m1);
              activeCount--;
              if (activeCount === 0) {
                observer.onCompleted();
              }
            }));
            self();
          }));
        }
      };
      q.push(source);
      activeCount++;
      ensureActive();
      return d;
    }, this);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/expand.js" + '');
