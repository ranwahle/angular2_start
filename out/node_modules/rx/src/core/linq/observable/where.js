System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/where.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/where.js";
  observableProto.where = observableProto.filter = function(predicate, thisArg) {
    var source = this;
    predicate = bindCallback(predicate, thisArg, 3);
    return new AnonymousObservable(function(o) {
      var count = 0;
      return source.subscribe(function(value) {
        try {
          var shouldRun = predicate(value, count++, source);
        } catch (e) {
          o.onError(e);
          return;
        }
        shouldRun && o.onNext(value);
      }, function(e) {
        o.onError(e);
      }, function() {
        o.onCompleted();
      });
    }, source);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/where.js" + '');
