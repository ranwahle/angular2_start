System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/takelastwithtime.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/takelastwithtime.js";
  observableProto.takeLastWithTime = function(duration, scheduler) {
    var source = this;
    isScheduler(scheduler) || (scheduler = timeoutScheduler);
    return new AnonymousObservable(function(o) {
      var q = [];
      return source.subscribe(function(x) {
        var now = scheduler.now();
        q.push({
          interval: now,
          value: x
        });
        while (q.length > 0 && now - q[0].interval >= duration) {
          q.shift();
        }
      }, function(e) {
        o.onError(e);
      }, function() {
        var now = scheduler.now();
        while (q.length > 0) {
          var next = q.shift();
          if (now - next.interval <= duration) {
            o.onNext(next.value);
          }
        }
        o.onCompleted();
      });
    }, source);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/takelastwithtime.js" + '');
