System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/onerrorresumenext.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/onerrorresumenext.js";
  var onErrorResumeNext = Observable.onErrorResumeNext = function() {
    var sources = argsOrArray(arguments, 0);
    return new AnonymousObservable(function(observer) {
      var pos = 0,
          subscription = new SerialDisposable(),
          cancelable = immediateScheduler.scheduleRecursive(function(self) {
            var current,
                d;
            if (pos < sources.length) {
              current = sources[pos++];
              isPromise(current) && (current = observableFromPromise(current));
              d = new SingleAssignmentDisposable();
              subscription.setDisposable(d);
              d.setDisposable(current.subscribe(observer.onNext.bind(observer), self, self));
            } else {
              observer.onCompleted();
            }
          });
      return new CompositeDisposable(subscription, cancelable);
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/onerrorresumenext.js" + '');
