System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/mergeall.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/mergeall.js";
  observableProto.mergeAll = function() {
    var sources = this;
    return new AnonymousObservable(function(o) {
      var group = new CompositeDisposable(),
          isStopped = false,
          m = new SingleAssignmentDisposable();
      group.add(m);
      m.setDisposable(sources.subscribe(function(innerSource) {
        var innerSubscription = new SingleAssignmentDisposable();
        group.add(innerSubscription);
        isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
        innerSubscription.setDisposable(innerSource.subscribe(function(x) {
          o.onNext(x);
        }, function(e) {
          o.onError(e);
        }, function() {
          group.remove(innerSubscription);
          isStopped && group.length === 1 && o.onCompleted();
        }));
      }, function(e) {
        o.onError(e);
      }, function() {
        isStopped = true;
        group.length === 1 && o.onCompleted();
      }));
      return group;
    }, sources);
  };
  observableProto.mergeObservable = function() {
    return this.mergeAll.apply(this, arguments);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/mergeall.js" + '');
