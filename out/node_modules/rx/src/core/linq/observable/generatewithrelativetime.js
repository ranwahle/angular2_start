System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/generatewithrelativetime.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/generatewithrelativetime.js";
  Observable.generateWithRelativeTime = function(initialState, condition, iterate, resultSelector, timeSelector, scheduler) {
    isScheduler(scheduler) || (scheduler = timeoutScheduler);
    return new AnonymousObservable(function(observer) {
      var first = true,
          hasResult = false,
          result,
          state = initialState,
          time;
      return scheduler.scheduleRecursiveWithRelative(0, function(self) {
        hasResult && observer.onNext(result);
        try {
          if (first) {
            first = false;
          } else {
            state = iterate(state);
          }
          hasResult = condition(state);
          if (hasResult) {
            result = resultSelector(state);
            time = timeSelector(state);
          }
        } catch (e) {
          observer.onError(e);
          return;
        }
        if (hasResult) {
          self(time);
        } else {
          observer.onCompleted();
        }
      });
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/generatewithrelativetime.js" + '');
