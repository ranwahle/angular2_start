System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/distinctuntilchanged.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/distinctuntilchanged.js";
  observableProto.distinctUntilChanged = function(keySelector, comparer) {
    var source = this;
    keySelector || (keySelector = identity);
    comparer || (comparer = defaultComparer);
    return new AnonymousObservable(function(o) {
      var hasCurrentKey = false,
          currentKey;
      return source.subscribe(function(value) {
        var comparerEquals = false,
            key;
        try {
          key = keySelector(value);
        } catch (e) {
          o.onError(e);
          return;
        }
        if (hasCurrentKey) {
          try {
            comparerEquals = comparer(currentKey, key);
          } catch (e) {
            o.onError(e);
            return;
          }
        }
        if (!hasCurrentKey || !comparerEquals) {
          hasCurrentKey = true;
          currentKey = key;
          o.onNext(value);
        }
      }, function(e) {
        o.onError(e);
      }, function() {
        o.onCompleted();
      });
    }, this);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/distinctuntilchanged.js" + '');
