System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/of.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/of.js";
  function observableOf(scheduler, array) {
    isScheduler(scheduler) || (scheduler = currentThreadScheduler);
    return new AnonymousObservable(function(observer) {
      var count = 0,
          len = array.length;
      return scheduler.scheduleRecursive(function(self) {
        if (count < len) {
          observer.onNext(array[count++]);
          self();
        } else {
          observer.onCompleted();
        }
      });
    });
  }
  Observable.of = function() {
    return observableOf(null, arguments);
  };
  Observable.ofWithScheduler = function(scheduler) {
    return observableOf(scheduler, slice.call(arguments, 1));
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/of.js" + '');
