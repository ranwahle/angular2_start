System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/windowwithcount.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/windowwithcount.js";
  observableProto.windowWithCount = function(count, skip) {
    var source = this;
    +count || (count = 0);
    Math.abs(count) === Infinity && (count = 0);
    if (count <= 0) {
      throw new Error(argumentOutOfRange);
    }
    skip == null && (skip = count);
    +skip || (skip = 0);
    Math.abs(skip) === Infinity && (skip = 0);
    if (skip <= 0) {
      throw new Error(argumentOutOfRange);
    }
    return new AnonymousObservable(function(observer) {
      var m = new SingleAssignmentDisposable(),
          refCountDisposable = new RefCountDisposable(m),
          n = 0,
          q = [];
      function createWindow() {
        var s = new Subject();
        q.push(s);
        observer.onNext(addRef(s, refCountDisposable));
      }
      createWindow();
      m.setDisposable(source.subscribe(function(x) {
        for (var i = 0,
            len = q.length; i < len; i++) {
          q[i].onNext(x);
        }
        var c = n - count + 1;
        c >= 0 && c % skip === 0 && q.shift().onCompleted();
        ++n % skip === 0 && createWindow();
      }, function(e) {
        while (q.length > 0) {
          q.shift().onError(e);
        }
        observer.onError(e);
      }, function() {
        while (q.length > 0) {
          q.shift().onCompleted();
        }
        observer.onCompleted();
      }));
      return refCountDisposable;
    }, source);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/windowwithcount.js" + '');
