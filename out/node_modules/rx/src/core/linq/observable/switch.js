System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/switch.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/switch.js";
  observableProto['switch'] = observableProto.switchLatest = function() {
    var sources = this;
    return new AnonymousObservable(function(observer) {
      var hasLatest = false,
          innerSubscription = new SerialDisposable(),
          isStopped = false,
          latest = 0,
          subscription = sources.subscribe(function(innerSource) {
            var d = new SingleAssignmentDisposable(),
                id = ++latest;
            hasLatest = true;
            innerSubscription.setDisposable(d);
            isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
            d.setDisposable(innerSource.subscribe(function(x) {
              latest === id && observer.onNext(x);
            }, function(e) {
              latest === id && observer.onError(e);
            }, function() {
              if (latest === id) {
                hasLatest = false;
                isStopped && observer.onCompleted();
              }
            }));
          }, observer.onError.bind(observer), function() {
            isStopped = true;
            !hasLatest && observer.onCompleted();
          });
      return new CompositeDisposable(subscription, innerSubscription);
    }, sources);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/switch.js" + '');
