System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/forkjoin.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/forkjoin.js";
  Observable.forkJoin = function() {
    var allSources = argsOrArray(arguments, 0);
    return new AnonymousObservable(function(subscriber) {
      var count = allSources.length;
      if (count === 0) {
        subscriber.onCompleted();
        return disposableEmpty;
      }
      var group = new CompositeDisposable(),
          finished = false,
          hasResults = new Array(count),
          hasCompleted = new Array(count),
          results = new Array(count);
      for (var idx = 0; idx < count; idx++) {
        (function(i) {
          var source = allSources[i];
          isPromise(source) && (source = observableFromPromise(source));
          group.add(source.subscribe(function(value) {
            if (!finished) {
              hasResults[i] = true;
              results[i] = value;
            }
          }, function(e) {
            finished = true;
            subscriber.onError(e);
            group.dispose();
          }, function() {
            if (!finished) {
              if (!hasResults[i]) {
                subscriber.onCompleted();
                return;
              }
              hasCompleted[i] = true;
              for (var ix = 0; ix < count; ix++) {
                if (!hasCompleted[ix]) {
                  return;
                }
              }
              finished = true;
              subscriber.onNext(results);
              subscriber.onCompleted();
            }
          }));
        })(idx);
      }
      return group;
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/forkjoin.js" + '');
