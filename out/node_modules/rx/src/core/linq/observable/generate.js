System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/generate.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/generate.js";
  Observable.generate = function(initialState, condition, iterate, resultSelector, scheduler) {
    isScheduler(scheduler) || (scheduler = currentThreadScheduler);
    return new AnonymousObservable(function(observer) {
      var first = true,
          state = initialState;
      return scheduler.scheduleRecursive(function(self) {
        var hasResult,
            result;
        try {
          if (first) {
            first = false;
          } else {
            state = iterate(state);
          }
          hasResult = condition(state);
          if (hasResult) {
            result = resultSelector(state);
          }
        } catch (exception) {
          observer.onError(exception);
          return;
        }
        if (hasResult) {
          observer.onNext(result);
          self();
        } else {
          observer.onCompleted();
        }
      });
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/generate.js" + '');
