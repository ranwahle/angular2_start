System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/ziparray.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/ziparray.js";
  Observable.zipArray = function() {
    var sources = argsOrArray(arguments, 0);
    return new AnonymousObservable(function(observer) {
      var n = sources.length,
          queues = arrayInitialize(n, function() {
            return [];
          }),
          isDone = arrayInitialize(n, function() {
            return false;
          });
      function next(i) {
        if (queues.every(function(x) {
          return x.length > 0;
        })) {
          var res = queues.map(function(x) {
            return x.shift();
          });
          observer.onNext(res);
        } else if (isDone.filter(function(x, j) {
          return j !== i;
        }).every(identity)) {
          observer.onCompleted();
          return;
        }
      }
      ;
      function done(i) {
        isDone[i] = true;
        if (isDone.every(identity)) {
          observer.onCompleted();
          return;
        }
      }
      var subscriptions = new Array(n);
      for (var idx = 0; idx < n; idx++) {
        (function(i) {
          subscriptions[i] = new SingleAssignmentDisposable();
          subscriptions[i].setDisposable(sources[i].subscribe(function(x) {
            queues[i].push(x);
            next(i);
          }, function(e) {
            observer.onError(e);
          }, function() {
            done(i);
          }));
        })(idx);
      }
      return new CompositeDisposable(subscriptions);
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/ziparray.js" + '');
