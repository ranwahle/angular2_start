System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/ambproto.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/ambproto.js";
  observableProto.amb = function(rightSource) {
    var leftSource = this;
    return new AnonymousObservable(function(observer) {
      var choice,
          leftChoice = 'L',
          rightChoice = 'R',
          leftSubscription = new SingleAssignmentDisposable(),
          rightSubscription = new SingleAssignmentDisposable();
      isPromise(rightSource) && (rightSource = observableFromPromise(rightSource));
      function choiceL() {
        if (!choice) {
          choice = leftChoice;
          rightSubscription.dispose();
        }
      }
      function choiceR() {
        if (!choice) {
          choice = rightChoice;
          leftSubscription.dispose();
        }
      }
      leftSubscription.setDisposable(leftSource.subscribe(function(left) {
        choiceL();
        if (choice === leftChoice) {
          observer.onNext(left);
        }
      }, function(err) {
        choiceL();
        if (choice === leftChoice) {
          observer.onError(err);
        }
      }, function() {
        choiceL();
        if (choice === leftChoice) {
          observer.onCompleted();
        }
      }));
      rightSubscription.setDisposable(rightSource.subscribe(function(right) {
        choiceR();
        if (choice === rightChoice) {
          observer.onNext(right);
        }
      }, function(err) {
        choiceR();
        if (choice === rightChoice) {
          observer.onError(err);
        }
      }, function() {
        choiceR();
        if (choice === rightChoice) {
          observer.onCompleted();
        }
      }));
      return new CompositeDisposable(leftSubscription, rightSubscription);
    });
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/ambproto.js" + '');
