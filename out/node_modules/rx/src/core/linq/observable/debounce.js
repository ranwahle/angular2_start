System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/debounce.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/debounce.js";
  observableProto.debounce = observableProto.throttleWithTimeout = function(dueTime, scheduler) {
    isScheduler(scheduler) || (scheduler = timeoutScheduler);
    var source = this;
    return new AnonymousObservable(function(observer) {
      var cancelable = new SerialDisposable(),
          hasvalue = false,
          value,
          id = 0;
      var subscription = source.subscribe(function(x) {
        hasvalue = true;
        value = x;
        id++;
        var currentId = id,
            d = new SingleAssignmentDisposable();
        cancelable.setDisposable(d);
        d.setDisposable(scheduler.scheduleWithRelative(dueTime, function() {
          hasvalue && id === currentId && observer.onNext(value);
          hasvalue = false;
        }));
      }, function(e) {
        cancelable.dispose();
        observer.onError(e);
        hasvalue = false;
        id++;
      }, function() {
        cancelable.dispose();
        hasvalue && observer.onNext(value);
        observer.onCompleted();
        hasvalue = false;
        id++;
      });
      return new CompositeDisposable(subscription, cancelable);
    }, this);
  };
  observableProto.throttle = function(dueTime, scheduler) {
    return this.debounce(dueTime, scheduler);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/debounce.js" + '');
