System.registerModule("../../../../../../../node_modules/rx/src/core/linq/observable/catchproto.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../../node_modules/rx/src/core/linq/observable/catchproto.js";
  function observableCatchHandler(source, handler) {
    return new AnonymousObservable(function(observer) {
      var d1 = new SingleAssignmentDisposable(),
          subscription = new SerialDisposable();
      subscription.setDisposable(d1);
      d1.setDisposable(source.subscribe(observer.onNext.bind(observer), function(exception) {
        var d,
            result;
        try {
          result = handler(exception);
        } catch (ex) {
          observer.onError(ex);
          return;
        }
        isPromise(result) && (result = observableFromPromise(result));
        d = new SingleAssignmentDisposable();
        subscription.setDisposable(d);
        d.setDisposable(result.subscribe(observer));
      }, observer.onCompleted.bind(observer)));
      return subscription;
    }, source);
  }
  observableProto['catch'] = observableProto.catchError = function(handlerOrSecond) {
    return typeof handlerOrSecond === 'function' ? observableCatchHandler(this, handlerOrSecond) : observableCatch([this, handlerOrSecond]);
  };
  observableProto.catchException = function(handlerOrSecond) {
    return this.catchError(handlerOrSecond);
  };
  return {};
});
System.get("../../../../../../../node_modules/rx/src/core/linq/observable/catchproto.js" + '');
