System.registerModule("../../../../../node_modules/rx/src/core/notification.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../node_modules/rx/src/core/notification.js";
  var Notification = Rx.Notification = (function() {
    function Notification(kind, hasValue) {
      this.hasValue = hasValue == null ? false : hasValue;
      this.kind = kind;
    }
    Notification.prototype.accept = function(observerOrOnNext, onError, onCompleted) {
      return observerOrOnNext && typeof observerOrOnNext === 'object' ? this._acceptObservable(observerOrOnNext) : this._accept(observerOrOnNext, onError, onCompleted);
    };
    Notification.prototype.toObservable = function(scheduler) {
      var notification = this;
      isScheduler(scheduler) || (scheduler = immediateScheduler);
      return new AnonymousObservable(function(observer) {
        return scheduler.schedule(function() {
          notification._acceptObservable(observer);
          notification.kind === 'N' && observer.onCompleted();
        });
      });
    };
    return Notification;
  })();
  var notificationCreateOnNext = Notification.createOnNext = (function() {
    function _accept(onNext) {
      return onNext(this.value);
    }
    function _acceptObservable(observer) {
      return observer.onNext(this.value);
    }
    function toString() {
      return 'OnNext(' + this.value + ')';
    }
    return function(value) {
      var notification = new Notification('N', true);
      notification.value = value;
      notification._accept = _accept;
      notification._acceptObservable = _acceptObservable;
      notification.toString = toString;
      return notification;
    };
  }());
  var notificationCreateOnError = Notification.createOnError = (function() {
    function _accept(onNext, onError) {
      return onError(this.exception);
    }
    function _acceptObservable(observer) {
      return observer.onError(this.exception);
    }
    function toString() {
      return 'OnError(' + this.exception + ')';
    }
    return function(e) {
      var notification = new Notification('E');
      notification.exception = e;
      notification._accept = _accept;
      notification._acceptObservable = _acceptObservable;
      notification.toString = toString;
      return notification;
    };
  }());
  var notificationCreateOnCompleted = Notification.createOnCompleted = (function() {
    function _accept(onNext, onError, onCompleted) {
      return onCompleted();
    }
    function _acceptObservable(observer) {
      return observer.onCompleted();
    }
    function toString() {
      return 'OnCompleted()';
    }
    return function() {
      var notification = new Notification('C');
      notification._accept = _accept;
      notification._acceptObservable = _acceptObservable;
      notification.toString = toString;
      return notification;
    };
  }());
  return {};
});
System.get("../../../../../node_modules/rx/src/core/notification.js" + '');
