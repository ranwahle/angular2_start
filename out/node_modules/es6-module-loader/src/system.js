System.registerModule("../../../../node_modules/es6-module-loader/src/system.js", [], function() {
  "use strict";
  var __moduleName = "../../../../node_modules/es6-module-loader/src/system.js";
  var System;
  function SystemLoader() {
    Loader.call(this);
    this.paths = {};
  }
  function applyPaths(paths, name) {
    var pathMatch = '',
        wildcard,
        maxWildcardPrefixLen = 0;
    for (var p in paths) {
      var pathParts = p.split('*');
      if (pathParts.length > 2)
        throw new TypeError('Only one wildcard in a path is permitted');
      if (pathParts.length == 1) {
        if (name == p) {
          pathMatch = p;
          break;
        }
      } else {
        var wildcardPrefixLen = pathParts[0].length;
        if (wildcardPrefixLen >= maxWildcardPrefixLen && name.substr(0, pathParts[0].length) == pathParts[0] && name.substr(name.length - pathParts[1].length) == pathParts[1]) {
          maxWildcardPrefixLen = wildcardPrefixLen;
          pathMatch = p;
          wildcard = name.substr(pathParts[0].length, name.length - pathParts[1].length - pathParts[0].length);
        }
      }
    }
    var outPath = paths[pathMatch] || name;
    if (typeof wildcard == 'string')
      outPath = outPath.replace('*', wildcard);
    return outPath;
  }
  function LoaderProto() {}
  LoaderProto.prototype = Loader.prototype;
  SystemLoader.prototype = new LoaderProto();
  return {};
});
System.get("../../../../node_modules/es6-module-loader/src/system.js" + '');
