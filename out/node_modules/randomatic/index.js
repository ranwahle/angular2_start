System.registerModule("../../../node_modules/randomatic/index.js", [], function() {
  "use strict";
  var __moduleName = "../../../node_modules/randomatic/index.js";
  var isNumber = require('is-number');
  var typeOf = require('kind-of');
  module.exports = randomatic;
  var type = {
    lower: 'abcdefghijklmnopqrstuvwxyz',
    upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
    number: '0123456789',
    special: '~!@#$%^&()_+-={}[];\',.'
  };
  type.all = type.lower + type.upper + type.number;
  function randomatic(pattern, length, options) {
    if (typeof pattern === 'undefined') {
      throw new Error('randomatic expects a string or number.');
    }
    var custom = false;
    if (arguments.length === 1) {
      if (typeof pattern === 'string') {
        length = pattern.length;
      } else if (isNumber(pattern)) {
        options = {};
        length = pattern;
        pattern = '*';
      }
    }
    if (typeOf(length) === 'object' && length.hasOwnProperty('chars')) {
      options = length;
      pattern = options.chars;
      length = pattern.length;
      custom = true;
    }
    var opts = options || {};
    var mask = '';
    var res = '';
    if (pattern.indexOf('?') !== -1)
      mask += opts.chars;
    if (pattern.indexOf('a') !== -1)
      mask += type.lower;
    if (pattern.indexOf('A') !== -1)
      mask += type.upper;
    if (pattern.indexOf('0') !== -1)
      mask += type.number;
    if (pattern.indexOf('!') !== -1)
      mask += type.special;
    if (pattern.indexOf('*') !== -1)
      mask += type.all;
    if (custom)
      mask += pattern;
    while (length--) {
      res += mask.charAt(parseInt(Math.random() * mask.length, 10));
    }
    return res;
  }
  ;
  return {};
});
System.get("../../../node_modules/randomatic/index.js" + '');
