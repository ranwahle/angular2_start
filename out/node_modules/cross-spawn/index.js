System.registerModule("../../../node_modules/cross-spawn/index.js", [], function() {
  "use strict";
  var __moduleName = "../../../node_modules/cross-spawn/index.js";
  var fs = require('fs');
  var path = require('path');
  var cp = require('child_process');
  var LRU = require('lru-cache');
  var isWin = process.platform === 'win32';
  var shebangCache = LRU({
    max: 50,
    maxAge: 30 * 1000
  });
  function readShebang(command) {
    var buffer;
    var fd;
    var match;
    var shebang;
    if (command.indexOf(path.sep) !== -1) {
      command = path.resolve(command);
    }
    shebang = shebangCache.get(command);
    if (shebang) {
      return shebang;
    }
    buffer = new Buffer(150);
    try {
      fd = fs.openSync(command, 'r');
      fs.readSync(fd, buffer, 0, 150, 0);
    } catch (e) {}
    match = buffer.toString().trim().match(/\#\!\/usr\/bin\/env ([^\r\n]+)/i);
    shebang = match && match[1];
    shebangCache.set(command, shebang);
    return shebang;
  }
  function escapeArg(arg, quote) {
    arg = '' + arg;
    if (!quote) {
      arg = arg.replace(/([\(\)%!\^<>&|;,"' ])/g, '^$1');
    } else {
      arg = arg.replace(/(\\*)"/gi, '$1$1\\"');
      arg = arg.replace(/(\\*)$/, '$1$1');
      arg = '"' + arg + '"';
    }
    return arg;
  }
  function escapeCommand(command) {
    return /^[a-z0-9_-]+$/i.test(command) ? command : escapeArg(command, true);
  }
  function spawn(command, args, options) {
    var applyQuotes;
    var shebang;
    args = args || [];
    options = options || {};
    if (!isWin) {
      return cp.spawn(command, args, options);
    }
    shebang = readShebang(command);
    if (shebang) {
      args.unshift(command);
      command = shebang;
    }
    applyQuotes = command !== 'echo';
    command = escapeCommand(command);
    args = args.map(function(arg) {
      return escapeArg(arg, applyQuotes);
    });
    args = ['/s', '/c', '"' + command + (args.length ? ' ' + args.join(' ') : '') + '"'];
    command = process.env.comspec || 'cmd.exe';
    options.windowsVerbatimArguments = true;
    return cp.spawn(command, args, options);
  }
  module.exports = spawn;
  module.exports.spawn = spawn;
  return {};
});
System.get("../../../node_modules/cross-spawn/index.js" + '');
