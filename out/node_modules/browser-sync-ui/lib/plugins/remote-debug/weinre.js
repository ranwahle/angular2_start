System.registerModule("../../../../../../node_modules/browser-sync-ui/lib/plugins/remote-debug/weinre.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../node_modules/browser-sync-ui/lib/plugins/remote-debug/weinre.js";
  var url = require("url");
  var Immutable = require("immutable");
  var path = require("path");
  var weinreApp;
  var WEINRE_NAME = "weinre-debug";
  var WEINRE_ID = "#browsersync";
  var WEINRE_ELEM_ID = "__browser-sync-weinre__";
  var weinreTargetUrl = {
    protocol: "http:",
    pathname: "/target/target-script-min.js",
    hash: WEINRE_ID
  };
  var weinreClientUrl = {
    protocol: "http:",
    pathname: "/client/",
    hash: WEINRE_ID
  };
  function init(ui) {
    var hostUrl = getHostUrl(ui, ui.bs);
    var weinrePort = ui.getOptionIn(["weinre", "port"]);
    weinreTargetUrl.hostname = hostUrl.hostname;
    weinreClientUrl.hostname = hostUrl.hostname;
    weinreClientUrl.port = weinrePort;
    weinreTargetUrl.port = weinrePort;
    ui.setOption(WEINRE_NAME, Immutable.fromJS({
      name: WEINRE_NAME,
      active: false,
      url: false,
      targetUrl: url.format(weinreTargetUrl),
      clientUrl: url.format(weinreClientUrl),
      port: weinrePort
    }));
    setWeinreClientUrl(ui, url.format(weinreClientUrl));
    var methods = {
      toggle: function(data) {
        toggleWeinre(ui.socket, ui.clients, ui, ui.bs, data);
      },
      event: function(event) {
        methods[event.event](event.data);
      }
    };
    return methods;
  }
  function getHostUrl(ui, bs) {
    var url = bs.getOptionIn(["urls", "external"]);
    if (!url) {
      url = bs.getOptionIn(["urls", "local"]);
    }
    return require("url").parse(url);
  }
  function setWeinreClientUrl(ui, weinreClientUrl) {
    var weinre = ui.options.getIn(["clientFiles", "weinre"]).toJS();
    ui.setMany(function(item) {
      item.setIn(["clientFiles", "weinre", "hidden"], weinre.hidden.replace("%s", weinreClientUrl));
      return item;
    });
  }
  function toggleWeinre(socket, clients, ui, bs, value) {
    if (value !== true) {
      value = false;
    }
    if (value) {
      var _debugger = enableWeinre(ui, bs);
      ui.setMany(function(item) {
        item.setIn([WEINRE_NAME, "active"], true);
        item.setIn([WEINRE_NAME, "url"], _debugger.url);
        item.setIn([WEINRE_NAME, "active"], true);
        item.setIn(["clientFiles", "weinre", "active"], true);
      }, {silent: true});
      socket.emit("ui:weinre:enabled", _debugger);
      var fileitem = {
        type: "js",
        src: ui.getOptionIn([WEINRE_NAME, "targetUrl"]),
        id: WEINRE_ELEM_ID
      };
      ui.addElement(clients, fileitem);
    } else {
      disableWeinre(ui, bs);
      ui.setOptionIn([WEINRE_NAME, "active"], false, {silent: false});
      ui.setOptionIn(["clientFiles", "weinre", "active"], false);
      socket.emit("ui:weinre:disabled");
      clients.emit("browser:reload");
    }
  }
  function enableWeinre(ui, bs) {
    if (weinreApp) {
      weinreApp.close();
      weinreApp = false;
    }
    var port = ui.getOptionIn([WEINRE_NAME, "port"]);
    var logger = require(path.join(path.dirname(require.resolve("weinre")), "utils.js"));
    logger.log = function(message) {
      ui.logger.debug("[weinre]: %s", message);
    };
    var weinre = require("weinre");
    var external = getHostUrl(ui, bs);
    weinreApp = weinre.run({
      httpPort: port,
      boundHost: external.hostname,
      verbose: false,
      debug: false,
      readTimeout: 5,
      deathTimeout: 15
    });
    return ui.options.get(WEINRE_NAME).toJS();
  }
  function disableWeinre(ui) {
    if (weinreApp) {
      weinreApp.close();
      weinreApp = false;
    }
    return ui.options.get(WEINRE_NAME).toJS();
  }
  module.exports.init = init;
  module.exports.toggleWeinre = toggleWeinre;
  return {};
});
System.get("../../../../../../node_modules/browser-sync-ui/lib/plugins/remote-debug/weinre.js" + '');
