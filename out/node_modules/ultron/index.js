System.registerModule("../../../node_modules/ultron/index.js", [], function() {
  "use strict";
  var __moduleName = "../../../node_modules/ultron/index.js";
  var has = Object.prototype.hasOwnProperty;
  var id = 0;
  function Ultron(ee) {
    if (!(this instanceof Ultron))
      return new Ultron(ee);
    this.id = id++;
    this.ee = ee;
  }
  Ultron.prototype.on = function on(event, fn, context) {
    fn.__ultron = this.id;
    this.ee.on(event, fn, context);
    return this;
  };
  Ultron.prototype.once = function once(event, fn, context) {
    fn.__ultron = this.id;
    this.ee.once(event, fn, context);
    return this;
  };
  Ultron.prototype.remove = function remove() {
    var args = arguments,
        event;
    if (args.length === 1 && 'string' === typeof args[0]) {
      args = args[0].split(/[, ]+/);
    } else if (!args.length) {
      args = [];
      for (event in this.ee._events) {
        if (has.call(this.ee._events, event))
          args.push(event);
      }
    }
    for (var i = 0; i < args.length; i++) {
      var listeners = this.ee.listeners(args[i]);
      for (var j = 0; j < listeners.length; j++) {
        event = listeners[j];
        if (event.listener) {
          if (event.listener.__ultron !== this.id)
            continue;
          delete event.listener.__ultron;
        } else {
          if (event.__ultron !== this.id)
            continue;
          delete event.__ultron;
        }
        this.ee.removeListener(args[i], event);
      }
    }
    return this;
  };
  Ultron.prototype.destroy = function destroy() {
    if (!this.ee)
      return false;
    this.remove();
    this.ee = null;
    return true;
  };
  module.exports = Ultron;
  return {};
});
System.get("../../../node_modules/ultron/index.js" + '');
