System.registerModule("../../../../node_modules/browser-sync/lib/snippet.js", [], function() {
  "use strict";
  var __moduleName = "../../../../node_modules/browser-sync/lib/snippet.js";
  var connectUtils = require("./connect-utils");
  var config = require("./config");
  var lrSnippet = require("resp-modifier");
  var path = require("path");
  var _ = require("lodash");
  var fs = require("fs");
  var utils = {
    isExcluded: function(url, excludeList) {
      var extension = path.extname(url);
      if (extension) {
        if (~url.indexOf("?")) {
          return true;
        }
        extension = extension.slice(1);
        return _.contains(excludeList, extension);
      }
      return false;
    },
    getRegex: function(snippet, options) {
      var fn = options.getIn(["rule", "fn"]);
      fn = fn.bind(null, snippet);
      return {
        match: options.getIn(["rule", "match"]),
        fn: fn,
        once: true,
        id: "bs-snippet"
      };
    },
    getSnippetMiddleware: function(snippet, options, rewriteRules) {
      return lrSnippet.create(utils.getRules(snippet, options, rewriteRules));
    },
    getRules: function(snippet, options, rewriteRules) {
      var rules = [utils.getRegex(snippet, options)];
      if (rewriteRules) {
        rules = rules.concat(rewriteRules);
      }
      return {
        rules: rules,
        blacklist: options.get("blacklist").toJS(),
        whitelist: options.get("whitelist").toJS()
      };
    },
    isOldIe: function(req, excludeList) {
      var ua = req.headers["user-agent"];
      var match = /MSIE (\d)\.\d/.exec(ua);
      if (match) {
        if (parseInt(match[1], 10) < 9) {
          if (!utils.isExcluded(req.url, excludeList)) {
            req.headers["accept"] = "text/html";
          }
        }
      }
      return req;
    },
    getClientJs: function(port, options) {
      var socket = utils.getSocketScript();
      var noConflictJs = "window.___browserSync___oldSocketIo = window.io;";
      return noConflictJs + socket + ";" + connectUtils.socketConnector(options);
    },
    getSocketScript: function() {
      return fs.readFileSync(path.join(__dirname, config.socketIoScript), "utf-8");
    }
  };
  module.exports.utils = utils;
  return {};
});
System.get("../../../../node_modules/browser-sync/lib/snippet.js" + '');
