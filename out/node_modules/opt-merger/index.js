System.registerModule("../../../node_modules/opt-merger/index.js", [], function() {
  "use strict";
  var __moduleName = "../../../node_modules/opt-merger/index.js";
  var _ = require("lodash");
  var args = require("minimist")(process.argv.slice(2));
  var _opts = {
    ignoreCli: false,
    simple: false
  };
  function getOpts() {
    return _.cloneDeep(_opts);
  }
  module.exports.set = function(obj) {
    return {merge: merge.bind(null, _.merge(getOpts(), obj))};
  };
  module.exports.merge = function(defaults, config, callbacks) {
    return merge(getOpts(), defaults, config, callbacks);
  };
  module.exports.getArgs = function() {
    return args;
  };
  function merge(opts, defaults, config, callbacks) {
    var toMerge;
    var commandLineArgs = exports.getArgs();
    defaults = _.cloneDeep(defaults);
    config = _.cloneDeep(config);
    if ((config && Object.keys(config).length) || opts.simple || opts.ignoreCli) {
      toMerge = config;
    } else {
      toMerge = commandLineArgs;
    }
    var simpleMerged = _.merge(_.cloneDeep(defaults), toMerge, function(a, b) {
      return _.isArray(a) ? _.union(a, b) : undefined;
    });
    if (callbacks && Object.keys(callbacks).length) {
      return exports.mergeOptions(opts, defaults, simpleMerged, config, callbacks);
    } else {
      return opts.simple ? simpleMerged : _.merge(simpleMerged, commandLineArgs);
    }
  }
  module.exports.mergeOptions = function(opts, defaults, merged, config, callbacks) {
    var args = exports.getArgs();
    Object.keys(callbacks).forEach(function(item) {
      var newValue;
      if (!opts.ignoreCli && args && !_.isUndefined(args[item])) {
        newValue = args[item];
      } else {
        newValue = config[item];
      }
      if (_.isFunction(callbacks[item]) && !_.isUndefined(defaults[item])) {
        merged[item] = callbacks[item](defaults[item], merged[item], newValue, opts.ignoreCli ? undefined : args, config);
      }
    });
    return merged;
  };
  return {};
});
System.get("../../../node_modules/opt-merger/index.js" + '');
