System.registerModule("../../../../../../node_modules/opt-merger/node_modules/lodash/internal/baseMatchesProperty.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../node_modules/opt-merger/node_modules/lodash/internal/baseMatchesProperty.js";
  var baseGet = require('./baseGet'),
      baseIsEqual = require('./baseIsEqual'),
      baseSlice = require('./baseSlice'),
      isArray = require('../lang/isArray'),
      isKey = require('./isKey'),
      isStrictComparable = require('./isStrictComparable'),
      last = require('../array/last'),
      toObject = require('./toObject'),
      toPath = require('./toPath');
  function baseMatchesProperty(path, srcValue) {
    var isArr = isArray(path),
        isCommon = isKey(path) && isStrictComparable(srcValue),
        pathKey = (path + '');
    path = toPath(path);
    return function(object) {
      if (object == null) {
        return false;
      }
      var key = pathKey;
      object = toObject(object);
      if ((isArr || !isCommon) && !(key in object)) {
        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        if (object == null) {
          return false;
        }
        key = last(path);
        object = toObject(object);
      }
      return object[key] === srcValue ? (srcValue !== undefined || (key in object)) : baseIsEqual(srcValue, object[key], undefined, true);
    };
  }
  module.exports = baseMatchesProperty;
  return {};
});
System.get("../../../../../../node_modules/opt-merger/node_modules/lodash/internal/baseMatchesProperty.js" + '');
