System.registerModule("../../../../../../node_modules/opt-merger/node_modules/lodash/internal/binaryIndexBy.js", [], function() {
  "use strict";
  var __moduleName = "../../../../../../node_modules/opt-merger/node_modules/lodash/internal/binaryIndexBy.js";
  var nativeFloor = Math.floor,
      nativeMin = Math.min;
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;
  function binaryIndexBy(array, value, iteratee, retHighest) {
    value = iteratee(value);
    var low = 0,
        high = array ? array.length : 0,
        valIsNaN = value !== value,
        valIsNull = value === null,
        valIsUndef = value === undefined;
    while (low < high) {
      var mid = nativeFloor((low + high) / 2),
          computed = iteratee(array[mid]),
          isDef = computed !== undefined,
          isReflexive = computed === computed;
      if (valIsNaN) {
        var setLow = isReflexive || retHighest;
      } else if (valIsNull) {
        setLow = isReflexive && isDef && (retHighest || computed != null);
      } else if (valIsUndef) {
        setLow = isReflexive && (retHighest || isDef);
      } else if (computed == null) {
        setLow = false;
      } else {
        setLow = retHighest ? (computed <= value) : (computed < value);
      }
      if (setLow) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return nativeMin(high, MAX_ARRAY_INDEX);
  }
  module.exports = binaryIndexBy;
  return {};
});
System.get("../../../../../../node_modules/opt-merger/node_modules/lodash/internal/binaryIndexBy.js" + '');
